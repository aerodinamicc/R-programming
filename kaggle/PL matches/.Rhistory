ggplot(aes(x = rank, y = goalDiff, color = finished))  +
ylab("goal difference") +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue")
ggarrange(c, d, e, nrow = 1, ncol = 3)
rankColors <- c("darkgoldenrod1", "green", "salmon1", "red2")
c <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalsScored, color = finished)) +
ylab("scored") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm",  formula = y~poly(x, 2), se = FALSE, color = "blue")
d <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
mutate(goalsConceded = goalsScored - goalDiff) %>%
ggplot(aes(x = rank, y = goalsConceded, color = finished))  +
ylab("conceded") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue")
e <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalDiff, color = finished))  +
ylab("goal difference") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue")
ggarrange(c, d, e, nrow = 1, ncol = 3)
rankColors <- c("darkgoldenrod1", "green", "deepskyblue1", "red2")
c <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalsScored, color = finished)) +
ylab("scored") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm",  formula = y~poly(x, 2), se = FALSE, color = "blue")
d <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
mutate(goalsConceded = goalsScored - goalDiff) %>%
ggplot(aes(x = rank, y = goalsConceded, color = finished))  +
ylab("conceded") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue")
e <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalDiff, color = finished))  +
ylab("goal difference") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue")
ggarrange(c, d, e, nrow = 1, ncol = 3)
gd <- standings$goalDiff
lmgd <- lm(rank~gd)
predict(lmgd, list(gd = c(20)))
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = factor(rank), y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2)
b <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
stat_smooth(method="lm", se = FALSE, formula= y~poly(x, 3), colour="red")
ggarrange(a, b, nrow = 1, ncol = 2)
rankColors <- c("darkgoldenrod1", "green", "deepskyblue1", "red2")
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = factor(rank), y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2)
b <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points, color = finished)) +
scale_color_manual(values = rankColors) +
geom_point(color = "blue") +
stat_smooth(method="lm", se = FALSE, formula= y~poly(x, 3), colour="red")
ggarrange(a, b, nrow = 1, ncol = 2)
rankColors <- c("darkgoldenrod1", "green", "deepskyblue1", "red2")
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = factor(rank), y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2)
b <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points, color = finished)) +
scale_color_manual(values = rankColors) +
geom_point(color = "blue") +
stat_smooth(method="lm", se = FALSE, formula= y~poly(x, 3), colour="red")
ggarrange(a, b, nrow = 1, ncol = 2)
rankColors <- c("darkgoldenrod1", "green", "deepskyblue1", "red2")
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = factor(rank), y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2)
b <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points, color = finished)) +
scale_color_manual(values = rankColors) +
geom_point() +
stat_smooth(method="lm", se = FALSE, formula= y~poly(x, 3), colour="red")
ggarrange(a, b, nrow = 1, ncol = 2)
c <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalsScored, color = finished)) +
ylab("scored") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm",  formula = y~poly(x, 2), se = FALSE, color = "blue")
d <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
mutate(goalsConceded = goalsScored - goalDiff) %>%
ggplot(aes(x = rank, y = goalsConceded, color = finished))  +
ylab("conceded") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue")
e <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalDiff, color = finished))  +
ylab("goal difference") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue")
ggarrange(c, d, e, nrow = 1, ncol = 3)
lmgd <- lm(standings$rank~standings$goalDiff)
predict(lmgd, list(gd = c(20)))
predict(lmgd, list(x = c(20)))
x<- standings$goalDiff
lmgd <- lm(standings$rank~poly(x,3))
predict(lmgd, list(x = c(20)))
predict(lmgd, list(x = c(40)))
predict(lmgd, list(x = c(0)))
lmgd <- lm(poly(gd,3)~standings$rank)
predict(lmgd, list(gd = c(5)))
predict(lmgd, list(rank = c(5)))
rank <- standings$rank
lmgd <- lm(poly(gd,3)~rank)
predict(lmgd, list(rank = c(5)))
gd <- standings$goalDiff
rank <- standings$rank
lmgd <- lm(gd~rank)
predict(lmgd, list(rank = c(5)))
lmgd <- lm(gd~poly(rank, 3))
predict(lmgd, list(rank = c(5)))
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = goalDiff, y = rank, color = finished))  +
ylab("goal difference") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue")
predict(lmgd, list(rank = c(1)))
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalDiff, color = finished))  +
ylab("goal difference") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue")
predict(lmgd, list(rank = c(0)))
predict(lmgd, list(rank = c(-1)))
predict(lmgd, list(rank = c(-10)))
predict(lmgd, list(rank = seq(1:20)))
gdPred <- predict(lmgd, list(rank = seq(1:20)))
class(gdPred)
predict(lmpoints, list(rank = seq(1:20)))
points <- standings$points
lmpoints <- lm(points~rank)
predict(lmpoints, list(rank = seq(1:20)))
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points, color = finished)) +
scale_color_manual(values = rankColors) +
geom_point() +
stat_smooth(method="lm", se = FALSE, formula= y~poly(x, 3), colour="blue")
inverse.predict(lmpoints, list(rank = seq(1:20)))
install.library("chemCal")
install.packages("chemCal")
library(chemCal)
inverse.predict(lmpoints, list(rank = seq(1:20)))
inverse.predict(lmpoints, list(points = seq(1:20)))
gdPred <- predict(lmgd, list(rank = seq(1:20)))
points <- standings$points
lmpoints <- lm(points~rank)
predict(lmpoints, list(rank = seq(1:20)))
predict(lmgd, list(rank = seq(1:20)))
points <- standings$points
lmpoints <- lm(points~rank)
predict(lmpoints, list(rank = seq(1:20)))
predict(lmgd, list(rank = seq(1:20)))
points <- standings$points
lmpoints <- lm(points~poly(rank, 3))
predict(lmpoints, list(rank = seq(1:20)))
predictions <- tibble(rank = seq(1:20), goalDiff = gdPred, points = pointsPred)
pointsPred <- predict(lmpoints, list(rank = seq(1:20)))
predictions <- tibble(rank = seq(1:20), goalDiff = gdPred, points = pointsPred)
View(predictions)
predictions <- tibble(rank = seq(1:20), gd = gdPred, points = pointsPred)
predictions %>%
ggplot(aes(x = rank)) +
geom_point(y = gd, color = "red") +
geom_point(y = points, color = "green")
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point()
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
geom_line()
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
geom_line() +
geom_text()
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
geom_line() +
geom_text(label = value)
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
geom_line() +
geom_text(position = "identity", label = value)
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
geom_line() +
geom_text(stat = "identity", label = value)
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
geom_line()
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = round(seq(min(value), max(value), by = 10),1))
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
scale_y_continuous(breaks = round(seq(min(value), max(value), by = 10),1)) +
geom_point() +
geom_line()
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
scale_x_continuous(breaks = round(seq(min(value), max(value), by = 10),1)) +
geom_point() +
geom_line()
predictions %>%
gather(var, value, 2:3)
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
scale_y_continuous(breaks = round(seq(min(value), max(value), by = 10),1)) +
geom_point() +
geom_line()
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
geom_line()
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = round(seq(min(value), max(value), by = 10),1))
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(min(value), max(value), by = 10),1)) +
geom_line()
min(predictions$gd)
max(predictions$points)
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-25, 85, by = 10),1)) +
geom_line()
predictions <- tibble(rank = seq(1:20), "Goal difference" = gdPred, "Points" = pointsPred)
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-25, 85, by = 10),1)) +
geom_line()
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-25, 85, by = 10),1)) +
geom_line() +
ggtitle("Cubic regression line of points and goal difference vs ranking of a team") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14))
c <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalsScored, color = finished)) +
ylab("scored") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm",  formula = y~poly(x, 2), se = FALSE, color = "blue") +
ggtitle("Quadratic regression curve between rank and scored goals") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14))
d <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
mutate(goalsConceded = goalsScored - goalDiff) %>%
ggplot(aes(x = rank, y = goalsConceded, color = finished))  +
ylab("conceded") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
ggtitle("Linear regression line between rank and conceded goals") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14))
e <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalDiff, color = finished))  +
ylab("goal difference") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue") +
geom_line() +
ggtitle("Cubic regression curve between rank and goal difference") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14))
ggarrange(c, d, e, nrow = 1, ncol = 3)
e <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalDiff, color = finished))  +
ylab("goal difference") +
scale_color_manual(values = rankColors) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue") +
ggtitle("Cubic regression curve between rank and goal difference") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14))
ggarrange(c, d, e, nrow = 1, ncol = 3)
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = factor(rank), y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2)
b <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points, color = finished)) +
scale_color_manual(values = rankColors) +
geom_point() +
stat_smooth(method="lm", se = FALSE, formula= y~poly(x, 3), colour="blue")
ggarrange(a, b, nrow = 1, ncol = 2)
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points, color = finished)) +
scale_color_manual(values = rankColors) +
geom_point() +
stat_smooth(method="lm", se = FALSE, formula= y~poly(x, 3), colour="blue")+
ggtitle("Boxplots of all ranks") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14))
standings %>%
ungroup() %>%
mutate(Season = as.Date(paste0("01/01/", substr(Season, 1, 4)),format = "%d/%m/%Y")) %>% #That's just for better visualization on the x-axis
group_by(Season) %>%
filter(rank %in% c(1,2)) %>%
select(Season, team, points, rank) %>%
mutate(rank = factor(rank, c(1,2)))
standings %>%
ungroup() %>%
mutate(Season = as.Date(paste0("01/01/", substr(Season, 1, 4)),format = "%d/%m/%Y")) %>% #That's just for better visualization on the x-axis
group_by(Season) %>%
filter(rank %in% c(1,2)) %>%
select(Season, team, points, rank) %>%
mutate(rank = factor(rank, c(1,2))) %>%
spread("Champion", "Runner-up", 4)
standings %>%
ungroup() %>%
mutate(Season = as.Date(paste0("01/01/", substr(Season, 1, 4)),format = "%d/%m/%Y")) %>% #That's just for better visualization on the x-axis
group_by(Season) %>%
filter(rank %in% c(1,2)) %>%
select(Season, team, points, rank) %>%
mutate(rank = factor(rank, c(1,2))) %>%
spread(rank, place, 4)
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-25, 85, by = 10),1)) +
geom_line() +
ggtitle("Cubic regression line of points and goal difference vs ranking of a team") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14)) +
geom_hline(yintercept = 0, color = "orange") +
geom_hline(yintercept = 40, color = "orange") +
geom_hline(yintercept = 50, color = "orange") +
geom_hline(yintercept = 70, color = "orange")
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-25, 85, by = 10),1)) +
geom_line() +
ggtitle("Cubic regression line of points and goal difference vs ranking of a team") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "orange") +
geom_hline(yintercept = 40, linetype = "dashed", color = "orange") +
geom_hline(yintercept = 50, linetype = "dashed", color = "orange") +
geom_hline(yintercept = 70, linetype = "dashed", color = "orange")
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-25, 85, by = 10),1)) +
geom_line() +
ggtitle("Cubic regression line of points and goal difference vs ranking of a team") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "lawngreen") +
geom_hline(yintercept = 40, linetype = "dashed", color = "lawngreen") +
geom_hline(yintercept = 50, linetype = "dashed", color = "lawngreen") +
geom_hline(yintercept = 70, linetype = "dashed", color = "lawngreen")
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-25, 85, by = 10),1)) +
geom_line() +
ggtitle("Cubic regression line of points and goal difference vs ranking of a team") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red4") +
geom_hline(yintercept = 40, linetype = "dashed", color = "red4") +
geom_hline(yintercept = 50, linetype = "dashed", color = "red4") +
geom_hline(yintercept = 70, linetype = "dashed", color = "red4")
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-30, 80, by = 10),1)) +
geom_line() +
ggtitle("Cubic regression line of points and goal difference vs ranking of a team") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red4") +
geom_hline(yintercept = 40, linetype = "dashed", color = "red4") +
geom_hline(yintercept = 50, linetype = "dashed", color = "red4") +
geom_hline(yintercept = 70, linetype = "dashed", color = "red4")
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-30, 80, by = 10),1)) +
geom_line() +
ggtitle("Cubic regression line of points and goal difference vs ranking of a team") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "cyan") +
geom_hline(yintercept = 40, linetype = "dashed", color = "cyan") +
geom_hline(yintercept = 50, linetype = "dashed", color = "cyan") +
geom_hline(yintercept = 70, linetype = "dashed", color = "cyan")
predictions %>%
gather(var, value, 2:3) %>%
ggplot(aes(x = rank, y = value, color = var)) +
geom_point() +
scale_y_continuous(breaks = round(seq(-30, 80, by = 10),1)) +
geom_line() +
ggtitle("Cubic regression line of points and goal difference vs ranking of a team") +
theme(axis.text.x.bottom = element_text(size = 12),
axis.title.x.bottom = element_text(size = 14),
axis.text.y.left = element_text(size = 12),
axis.title.y.left = element_text(size = 14)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_hline(yintercept = 40, linetype = "dashed", color = "black") +
geom_hline(yintercept = 50, linetype = "dashed", color = "black") +
geom_hline(yintercept = 70, linetype = "dashed", color = "black")
