two000Summer <- monthly_trmm_prec %>%
filter(year == 2000 & month == 9) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two005Summer <- monthly_trmm_prec %>%
filter(year == 2005 & month == 9) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two016Summer <- monthly_trmm_prec %>%
filter(year == 2016 & month == 9) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
wetSeason2007 <- monthly_trmm_prec %>%
filter(year == 2007 & month == 2) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two000Summer
two005Summer
two016Summer
wetSeason2007
write.csv(monthly_trmm_prec, file = "monthly_trmm_prec.csv")
library(tidyverse)
library("tidyverse", lib.loc="~/R/win-library/3.3")
install.packages("tidyverse")
library(tidyverse)
library(regmap)
library(ncdf4)
library(lubridate)
library(tidyverse)
cwd <- function(x, clim_year_start = 10, pet = 100) {
x <- x %>%
arrange(year, month) %>%
# compute precipitation of previous month
mutate(prev_prec = lag(monthly_prec, default = 0))
# restrict to complete year for easier blocking
if (x$month[1] != 1) {
n <- nrow(x)
x <- x[which(x$month == 1)[1]:n, ]
}
if (tail(x$month, 1) != 12) {
n <- nrow(x)
x <- x[1:tail(which(x$month == 12), 1), ]
}
# create potentially altered year cycle for climatological year
clim_year_months <- c(1:12)
if (clim_year_start != 1) {
clim_year_months <- clim_year_months[c(clim_year_start:12, 1:(clim_year_start - 1))]
}
# loop in month-wise blocks
for (i in 1:12) {
.month <- clim_year_months[i]
.prev_month <- clim_year_months[i - 1]
if (.month == clim_year_start) {
x$wd[x$month == .month] <- 0
} else {
wd0 <- x$wd[x$month == .prev_month] - pet + x$monthly_prec[x$month == .month]
x$wd[x$month == .month] <- ifelse(wd0 >= 0, 0, wd0)
}
}
x
}
ncdf_to_tidy <- function(nc, .var, .start, .time = "time",
.res = "1 day", .station = "station",
.lon = "lon", .lat = "lat") {
time <- ncvar_get(nc, .time)
time <- seq(as.Date(.start), by = .res, length.out = length(time))
year <- year(time) %>% as.integer
month <- month(time) %>% as.integer
day <- day(time)
var_tidy <- ncvar_get(nc, .var) %>%
as_tibble %>%
mutate(year = year,
month = month,
day = day) %>%
gather(station, .var, starts_with("V"))
landid <- tibble(station = ncvar_get(nc, .station),
lon = ncvar_get(nc, .lon),
lat = ncvar_get(nc, .lat)) %>%
mutate(station = paste0("V", station + 1))
left_join(var_tidy, landid, by = "station") %>%
select(lon, lat, year, month, day, .var)
}
load("C:/Users/Jupiter/Desktop/Amazon/DA/.RData")
load("G:/Amazon/DA/.RData")
View(amazonWD)
View(anomalies)
View(anomaliesSd)
knitr::opts_chunk$set(echo = TRUE)
```
library(tidyverse)
library(ggrepel)
library(lubridate)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv("EPL_Set.csv", header = TRUE)
d <- d %>%
filter(!as.character(Season) %in% c("1993-94", "1994-95")) %>%
mutate_if(is.factor, as.character) %>%
mutate(Date = dmy(Date))
#Number of seasons in the PL----
fiveSeasons <- list("firebrick", 2, "dashed", 5)
tenSeasons <- list("chocolate3", 2, "dashed", 10)
fifteenSeasons <- list("chocolate1", 2, "dashed", 15)
twentySeasons <- list("cyan", 2, "dashed", 20)
d %>% group_by(HomeTeam) %>%
summarise(Seasons = n()*2/38) %>%
ggplot(aes(x = reorder(HomeTeam, Seasons), y = Seasons, fill = HomeTeam)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
coord_flip() +
xlab("Teams") +
guides(fill=FALSE) +
ggtitle("Number of seasons teams have played in the PL since 1995") +
geom_hline(yintercept=fiveSeasons[[4]], linetype=fiveSeasons[[3]], size=fiveSeasons[[2]], color = fiveSeasons[[1]]) +
geom_hline(yintercept=tenSeasons[[4]], linetype=tenSeasons[[3]], size=tenSeasons[[2]], color = tenSeasons[[1]]) +
geom_hline(yintercept=fifteenSeasons[[4]], linetype=fifteenSeasons[[3]], size=fifteenSeasons[[2]], color = fifteenSeasons[[1]]) +
geom_hline(yintercept=twentySeasons[[4]], linetype=twentySeasons[[3]], size=twentySeasons[[2]], color = twentySeasons[[1]])
#Win/Draw/Lose balance across seasons
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
annotate_figure(p, top = "Win/Draw/Loss balance of eight teams across all seasons since 1995")
library(tidyverse)
library(ggrepel)
library(lubridate)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv("EPL_Set.csv", header = TRUE)
d <- d %>%
filter(!as.character(Season) %in% c("1993-94", "1994-95")) %>%
mutate_if(is.factor, as.character) %>%
mutate(Date = dmy(Date))
#Number of seasons in the PL----
fiveSeasons <- list("firebrick", 2, "dashed", 5)
tenSeasons <- list("chocolate3", 2, "dashed", 10)
fifteenSeasons <- list("chocolate1", 2, "dashed", 15)
twentySeasons <- list("cyan", 2, "dashed", 20)
d %>% group_by(HomeTeam) %>%
summarise(Seasons = n()*2/38) %>%
ggplot(aes(x = reorder(HomeTeam, Seasons), y = Seasons, fill = HomeTeam)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
coord_flip() +
xlab("Teams") +
guides(fill=FALSE) +
ggtitle("Number of seasons teams have played in the PL since 1995") +
geom_hline(yintercept=fiveSeasons[[4]], linetype=fiveSeasons[[3]], size=fiveSeasons[[2]], color = fiveSeasons[[1]]) +
geom_hline(yintercept=tenSeasons[[4]], linetype=tenSeasons[[3]], size=tenSeasons[[2]], color = tenSeasons[[1]]) +
geom_hline(yintercept=fifteenSeasons[[4]], linetype=fifteenSeasons[[3]], size=fifteenSeasons[[2]], color = fifteenSeasons[[1]]) +
geom_hline(yintercept=twentySeasons[[4]], linetype=twentySeasons[[3]], size=twentySeasons[[2]], color = twentySeasons[[1]])
#Win/Draw/Lose balance across seasons
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
annotate_figure(p, top = "Win/Draw/Loss balance of eight teams across all seasons since 1995")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv("EPL_Set.csv", header = TRUE)
d <- d %>%
filter(!as.character(Season) %in% c("1993-94", "1994-95")) %>%
mutate_if(is.factor, as.character) %>%
mutate(Date = dmy(Date))
#Number of seasons in the PL----
fiveSeasons <- list("firebrick", 2, "dashed", 5)
tenSeasons <- list("chocolate3", 2, "dashed", 10)
fifteenSeasons <- list("chocolate1", 2, "dashed", 15)
twentySeasons <- list("cyan", 2, "dashed", 20)
d %>% group_by(HomeTeam) %>%
summarise(Seasons = n()*2/38) %>%
ggplot(aes(x = reorder(HomeTeam, Seasons), y = Seasons, fill = HomeTeam)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
coord_flip() +
xlab("Teams") +
guides(fill=FALSE) +
ggtitle("Number of seasons teams have played in the PL since 1995") +
geom_hline(yintercept=fiveSeasons[[4]], linetype=fiveSeasons[[3]], size=fiveSeasons[[2]], color = fiveSeasons[[1]]) +
geom_hline(yintercept=tenSeasons[[4]], linetype=tenSeasons[[3]], size=tenSeasons[[2]], color = tenSeasons[[1]]) +
geom_hline(yintercept=fifteenSeasons[[4]], linetype=fifteenSeasons[[3]], size=fifteenSeasons[[2]], color = fifteenSeasons[[1]]) +
geom_hline(yintercept=twentySeasons[[4]], linetype=twentySeasons[[3]], size=twentySeasons[[2]], color = twentySeasons[[1]])
#Win/Draw/Lose balance across seasons
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
#Reading and tidying----
source('Libraries.R')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Reading and tidying----
source('Libraries.R')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("coral", "goldenrod1","darkolivegreen2"))
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
annotate_figure(p, top = "Win/Draw/Loss balance of eight teams across all seasons since 1995")
#Win/Draw/Lose balance across seasons
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("coral", "goldenrod1","darkolivegreen2")) +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
annotate_figure(p, top = "Win/Draw/Loss balance of eight teams across all seasons since 1995")
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("coral", "goldenrod1","dodgerblue1")) +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
annotate_figure(p, top = "Win/Draw/Loss balance of eight teams across all seasons since 1995")
substr("dfsdkjfhs", 1, 2)
View(d)
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA))))),
Season = as.Date(paste0("01/01", substr(Season, 1, 4)),format = "%d/%m/%Y")) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("coral", "goldenrod1","dodgerblue1")) +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
annotate_figure(p, top = "Win/Draw/Loss balance of eight teams across all seasons since 1995")
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA))))),
Season = as.Date(paste0("01/01", substr(Season, 1, 4)),format = "%d/%m/%Y"))
dataset <- d
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA))))),
Season = as.Date(paste0("01/01", substr(Season, 1, 4)),format = "%d/%m/%Y"))
team <- "Arsenal"
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA))))),
Season = as.Date(paste0("01/01", substr(Season, 1, 4)),format = "%d/%m/%Y"))
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA))))),
Season = as.Date(paste0("01/01/", substr(Season, 1, 4)),format = "%d/%m/%Y"))
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA))))),
Season = as.Date(paste0("01/01/", substr(Season, 1, 4)),format = "%d/%m/%Y")) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("coral", "goldenrod1","dodgerblue1")) +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
annotate_figure(p, top = "Win/Draw/Loss balance of eight teams across all seasons since 1995")
