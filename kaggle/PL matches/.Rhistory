install.packages("efficient")
pew
library(efficient)
library(efficient)
library("efficient")
data(pew)
library(ncdf4)
library(lubridate)
library(tidyverse)
ncdf_to_tidy <- function(nc, .var, .start, .time = "time",
.res = "1 day", .station = "station",
.lon = "lon", .lat = "lat") {
time <- ncvar_get(nc, .time)
time <- seq(as.Date(.start), by = .res, length.out = length(time))
year <- year(time)
month <- month(time)
day <- day(time)
var_tidy <- ncvar_get(nc, .var) %>%
as_tibble %>%
mutate(year = year,
month = month,
day = day) %>%
gather(station, .var, starts_with("V"))
landid <- tibble(station = ncvar_get(nc, .station),
lon = ncvar_get(nc, .lon),
lat = ncvar_get(nc, .lat)) %>%
mutate(station = paste0("V", station + 1))
left_join(var_tidy, landid, by = "station") %>%
select(lon, lat, year, month, day, .var)
}
trmm <- nc_open("C:/Users/Jupiter/Desktop/Amazon/zlatan/TRMM_Amazon_1998_April_2017.nc")
trmm_tidy <- ncdf_to_tidy(trmm, .var = "prec", .start = "1998-01-01")
monthly_trmm_prec <- trmm_tidy %>% group_by(year, month,lon, lat) %>% summarise(monthly_avg_prec = mean(.var), max_values = max(.var))
View(monthly_trmm_prec)
max(monthly_trmm_prec$max_values)
max(monthly_trmm_prec$monthly_avg_prec)
monthly_trmm_prec <- trmm_tidy %>% group_by(day, year, month,lon, lat) %>% summarise(monthly_avg_prec = mean(.var), max_values = max(.var))
View(monthly_trmm_prec)
remove(monthly_trmm_prec)
monthly_trmm_prec <- trmm_tidy %>% group_by(year, month,lon, lat) %>% summarise(monthly_avg_prec = sum(.var), max_values = max(.var))
View(monthly_trmm_prec)
View(monthly_trmm_prec)
monthly_trmm_prec <- trmm_tidy %>% group_by(year, month,lon, lat) %>% summarise(monthly_avg_prec = sum(.var))
monthly_trmm_prec <- trmm_tidy %>% group_by(year, month,lon, lat) %>% summarise(monthly_prec = sum(.var))
two000Summer <- monthly_trmm_prec %>%
filter(year == 2000 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_avg_prec)) + coord_fixed()
two005Summer <- monthly_trmm_prec %>%
filter(year == 2005 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_avg_prec)) + coord_fixed()
two016Summer <- monthly_trmm_prec %>%
filter(year == 2016 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_avg_prec)) + coord_fixed()
wetSeason2007 <- monthly_trmm_prec %>%
filter(year == 2007 & month == 2) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_avg_prec)) + coord_fixed()
two000Summer
two005Summer
two016Summer
wetSeason2007
two000Summer <- monthly_trmm_prec %>%
filter(year == 2000 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two005Summer <- monthly_trmm_prec %>%
filter(year == 2005 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two016Summer <- monthly_trmm_prec %>%
filter(year == 2016 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
wetSeason2007 <- monthly_trmm_prec %>%
filter(year == 2007 & month == 2) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two000Summer
two005Summer
two016Summer
wetSeason2007
two000Summer <- monthly_trmm_prec %>%
filter(year == 2000 & month == 9) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two005Summer <- monthly_trmm_prec %>%
filter(year == 2005 & month == 9) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two016Summer <- monthly_trmm_prec %>%
filter(year == 2016 & month == 9) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
wetSeason2007 <- monthly_trmm_prec %>%
filter(year == 2007 & month == 2) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two000Summer
two005Summer
two016Summer
wetSeason2007
write.csv(monthly_trmm_prec, file = "monthly_trmm_prec.csv")
library(tidyverse)
library("tidyverse", lib.loc="~/R/win-library/3.3")
install.packages("tidyverse")
library(tidyverse)
library(regmap)
library(ncdf4)
library(lubridate)
library(tidyverse)
cwd <- function(x, clim_year_start = 10, pet = 100) {
x <- x %>%
arrange(year, month) %>%
# compute precipitation of previous month
mutate(prev_prec = lag(monthly_prec, default = 0))
# restrict to complete year for easier blocking
if (x$month[1] != 1) {
n <- nrow(x)
x <- x[which(x$month == 1)[1]:n, ]
}
if (tail(x$month, 1) != 12) {
n <- nrow(x)
x <- x[1:tail(which(x$month == 12), 1), ]
}
# create potentially altered year cycle for climatological year
clim_year_months <- c(1:12)
if (clim_year_start != 1) {
clim_year_months <- clim_year_months[c(clim_year_start:12, 1:(clim_year_start - 1))]
}
# loop in month-wise blocks
for (i in 1:12) {
.month <- clim_year_months[i]
.prev_month <- clim_year_months[i - 1]
if (.month == clim_year_start) {
x$wd[x$month == .month] <- 0
} else {
wd0 <- x$wd[x$month == .prev_month] - pet + x$monthly_prec[x$month == .month]
x$wd[x$month == .month] <- ifelse(wd0 >= 0, 0, wd0)
}
}
x
}
ncdf_to_tidy <- function(nc, .var, .start, .time = "time",
.res = "1 day", .station = "station",
.lon = "lon", .lat = "lat") {
time <- ncvar_get(nc, .time)
time <- seq(as.Date(.start), by = .res, length.out = length(time))
year <- year(time) %>% as.integer
month <- month(time) %>% as.integer
day <- day(time)
var_tidy <- ncvar_get(nc, .var) %>%
as_tibble %>%
mutate(year = year,
month = month,
day = day) %>%
gather(station, .var, starts_with("V"))
landid <- tibble(station = ncvar_get(nc, .station),
lon = ncvar_get(nc, .lon),
lat = ncvar_get(nc, .lat)) %>%
mutate(station = paste0("V", station + 1))
left_join(var_tidy, landid, by = "station") %>%
select(lon, lat, year, month, day, .var)
}
load("C:/Users/Jupiter/Desktop/Amazon/DA/.RData")
load("G:/Amazon/DA/.RData")
View(amazonWD)
View(anomalies)
View(anomaliesSd)
library(tidyverse)
library(ggrepel)
library(lubridate)
library(scales)
library(highcharter)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv("EPL_Set.csv", header = TRUE)
d <- d %>%
mutate_if(is.factor, as.character) %>%
mutate(Date = dmy(Date))
pointsPerSeasonFun <- function(dataset = d, team){
d %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(points = ifelse(HomeTeam == team & FTR == "H", 3,
ifelse(AwayTeam == team & FTR == "A", 3,
ifelse(FTR== "D", 1, 0))),
goalDiff = ifelse(HomeTeam == team, FTHG - FTAG, FTAG - FTHG),
goalsScored = ifelse(HomeTeam == team, FTHG, FTAG),
team = team) %>%
group_by(Season, team) %>%
summarise(points = sum(points), goalDiff = sum(goalDiff), goalsScored = sum(goalsScored)) %>%
select(Season, team,points, goalsScored, goalDiff)
}
teams <- unique(d$HomeTeam)
#PPS stands for points per season
pps <- data.frame()
pps <- pps %>%
mutate(Season = as.character(NA),
team = as.character(NA),
points = as.numeric(NA),
goalsScored = as.numeric(NA),
goalDiff = as.numeric(NA))
for (team in teams) {
teamsPointsPerSeason <- pointsPerSeasonFun(team = team)
pps <- pps %>% bind_rows(teamsPointsPerSeason)
}
#Seasonal standings----
standings <- pps %>%
group_by(Season) %>%
arrange(Season, desc(points), desc(goalDiff), desc(goalsScored)) %>%
mutate(rank = row_number(Season))
Petal
iris
standings %>%
ggplot(aes(x = points, y = rank)) +
geom_point()
standings %>%
ggplot(aes(x = rank, y = points)) +
geom_point()
standings %>%
group_by(rank) %>%
ggplot(aes(x = rank, y = points)) +
geom_bar()
standings %>%
group_by(rank) %>%
ggplot(aes(x = rank, y = points))
standings %>%
group_by(rank) %>%
ggplot(aes(y = points)) +
geom_bar(x = rank)
standings %>%
group_by(rank) %>%
ggplot(aes(x = rank)) +
geom_bar(y = points)
standings %>%
group_by(rank) %>%
ggplot(aes(x = rank)) +
geom_bar(aes(y = points))
standings %>%
ggplot(aes(x = rank, y = points)) +
geom_point()
lm(points~rank, standings)
standings %>%
ggplot(aes(x = rank, y = points)) +
geom_point() +
geom_smooth(method='lm',formula=rank~points)
standings %>%
ggplot(aes(x = rank, y = points)) +
geom_point() +
geom_smooth(method='lm')
standings %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
geom_smooth(method='lm', se = FALSE)
standings %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
geom_smooth(method='lm', se = FALSE, color = "red")
standings %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method='lm', se = FALSE, color = "red")
library(devtools)
standings %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method='lm', se = FALSE, color = "red")
standings %>%
filter(Season != "1993-94" & Season & != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method='lm', se = FALSE, color = "red")
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method='lm', se = FALSE, color = "red")
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
geom_smooth(method='lm', se = FALSE, color = "red")
cor(standings$points, standings$rank)
standings %>%
mutate(rank = factor(rank, seq(20:1, 1))) %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
geom_smooth(method='lm', se = FALSE, color = "red")
seq(20:1, 1)
seq(20:1, -1)
seq(20:1)
seq(1:20)
rev(seq(1:20))
standings %>%
mutate(rank = factor(rank, rev(seq(1:20)))) %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point(color = "blue") +
geom_smooth(method='lm', se = FALSE, color = "red")
standings %>%
mutate(rank = factor(rank, rev(seq(1:20)))) %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
#Seasonal standings----
standings <- pps %>%
group_by(Season) %>%
arrange(Season, desc(points), desc(goalDiff), desc(goalsScored)) %>%
mutate(rank = row_number(Season),
rank = factor(rank, rev(seq(1:20))))
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
b <-standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point() +
geom_smooth(method='lm', se = FALSE, color = "red")
ggarrange(a, b, nrow = 1)
library(tidyverse)
library(ggrepel)
library(lubridate)
library(scales)
library(highcharter)
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
b <-standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point() +
geom_smooth(method='lm', se = FALSE, color = "red")
ggarrange(a, b, nrow = 1)
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA))))),
Season = as.Date(paste0("01/01/", substr(Season, 1, 4)),format = "%d/%m/%Y")) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("coral", "goldenrod1","dodgerblue1")) +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
annotate_figure(p, top = "Win/Draw/Loss balance of eight teams across all seasons since 1995")
library(ggpubr)
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
b <-standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point() +
geom_smooth(method='lm', se = FALSE, color = "red")
ggarrange(a, b, nrow = 1)
ggarrange(a, b, nrow = 1, ncol = 2)
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point() +
geom_smooth(method='lm', se = FALSE)
#Seasonal standings----
standings <- pps %>%
group_by(Season) %>%
arrange(Season, desc(points), desc(goalDiff), desc(goalsScored)) %>%
mutate(rank = row_number(Season)))
#Seasonal standings----
standings <- pps %>%
group_by(Season) %>%
arrange(Season, desc(points), desc(goalDiff), desc(goalsScored)) %>%
mutate(rank = row_number(Season))
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = factor(rank, rev(seq(1:20))), y = points)) +
geom_point() +
geom_smooth(method='lm', se = FALSE)
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point() +
geom_smooth(method='lm', se = FALSE)
standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = factor(rank), y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
a
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = factor(rank), y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
b <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
geom_point() +
geom_smooth(method='lm', se = FALSE)
ggarrange(a, b, nrow = 1, ncol = 2)
a <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = factor(rank), y = points)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
geom_smooth(method='lm', se = FALSE, color = "red")
b <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = points)) +
xlab("rank") +
geom_point(color = "blue") +
geom_smooth(method='lm', se = FALSE, color = "red")
ggarrange(a, b, nrow = 1, ncol = 2)
c <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalsScored, color = finished)) +
ylab("scored") +
geom_point() +
geom_smooth(method = "lm",  formula = y~poly(x, 2), se = FALSE, color = "blue")
d <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
mutate(goalsConceded = goalsScored - goalDiff) %>%
ggplot(aes(x = rank, y = goalsConceded, color = "blue"))  +
ylab("conceded") +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue")
e <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalDiff, color = finished))  +
ylab("goal difference") +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue") +
guides(col = guide_legend())
ggarrange(c, d, e, nrow = 1, ncol = 3)
standings <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
mutate(finished = ifelse(rank < 5, "1-4",
ifelse(rank < 10, "5-10",
ifelse(rank < 18, "11-17", "18-20"))),
finished = factor(finished, c("1-4", "5-10", "11-17", "18-20")))
c <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalsScored, color = finished)) +
ylab("scored") +
geom_point() +
geom_smooth(method = "lm",  formula = y~poly(x, 2), se = FALSE, color = "blue")
d <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
mutate(goalsConceded = goalsScored - goalDiff) %>%
ggplot(aes(x = rank, y = goalsConceded, color = "blue"))  +
ylab("conceded") +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue")
e <- standings %>%
filter(Season != "1993-94" & Season != "1994-95") %>%
ggplot(aes(x = rank, y = goalDiff, color = finished))  +
ylab("goal difference") +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, color = "blue") +
guides(col = guide_legend())
ggarrange(c, d, e, nrow = 1, ncol = 3)
