for (team in teams) {
# W - streak of wins,
# U - streak of games without loss,
# D - streak of draws,
# X - streak of games without wins,
# L - streak of losses
data <- typeOfStreakFun(outcome, team)
teamsStreak <- longestStreakFun(data, outcome)
if(teamsStreak[[1]] > longestStreak){
longestStreak <- teamsStreak[[1]]
detailsStreak <- teamsStreak[[2]]
longestStreakTeam <- team
}
}
lst <- list(longestStreakTeam, longestStreak, detailsStreak)
lst
}
wins <- streakFun("W")
winsTitle <- paste("Longest winning streak:", wins[[2]], "by", wins[[1]])
winsDat <- wins[[3]]
winsDat %>%
arrange(Date) %>%
ggplot(aes(x = Date, y = goalDiff, group = 1)) +
geom_line() +
geom_point(aes(color = venue), size = 3) +
geom_label_repel(aes(label = label),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
ggtitle(winsTitle) +
ylab("Goal difference") +
theme(axis.text.x.bottom = element_text(angle = 90))
undefeated <- streakFun("U")
undefeatedTitle <- paste("Longest winning streak:", undefeated[[2]], "by", undefeated[[1]])
undefeatedDat <- undefeated[[3]]
undefeatedDat %>%
arrange(Date) %>%
ggplot(aes(x = Date, y = goalDiff, group = 1)) +
geom_line() +
geom_point(aes(color = venue), size = 3) +
geom_label_repel(aes(label = label),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
ggtitle(undefeatedTitle) +
ylab("Goal difference") +
theme(axis.text.x.bottom = element_text(angle = 90))
losses <- streakFun("L")
lossesTitle <- paste("Longest winning streak:", losses[[2]], "by", losses[[1]])
lossesDat <- losses[[3]]
lossesDat %>%
arrange(Date) %>%
ggplot(aes(x = Date, y = goalDiff, group = 1)) +
geom_line() +
geom_point(aes(color = venue), size = 3) +
geom_label_repel(aes(label = label),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
ggtitle(lossesTitle) +
ylab("Goal difference") +
theme(axis.text.x.bottom = element_text(angle = 90))
losses <- streakFun("X")
lossesTitle <- paste("Longest winning streak:", losses[[2]], "by", losses[[1]])
lossesDat <- losses[[3]]
lossesDat %>%
arrange(Date) %>%
ggplot(aes(x = Date, y = goalDiff, group = 1)) +
geom_line() +
geom_point(aes(color = venue), size = 3) +
geom_label_repel(aes(label = label),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
ggtitle(lossesTitle) +
ylab("Goal difference") +
theme(axis.text.x.bottom = element_text(angle = 90))
#Number of seasons in the PL----
fiveSeasons <- list("firebrick", 2, "dashed", 38*5)
tenSeasons <- list("chocolate1", 2, "dashed", 38*10)
fifteenSeasons <- list("chocolate3", 2, "dashed", 38*15)
d %>% group_by(HomeTeam) %>%
summarise(Games = n()*2) %>%
ggplot(aes(x = reorder(HomeTeam, Games), y = Games, fill = HomeTeam)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
coord_flip() +
geom_hline(yintercept=fiveSeasons[[4]], linetype=fiveSeasons[[3]], size=fiveSeasons[[2]], color = fiveSeasons[[1]]) +
geom_hline(yintercept=tenSeasons[[4]], linetype=tenSeasons[[3]], size=tenSeasons[[2]], color = tenSeasons[[1]]) +
geom_hline(yintercept=fifteenSeasons[[4]], linetype=fifteenSeasons[[3]], size=fifteenSeasons[[2]], color = fifteenSeasons[[1]])
fiveSeasons <- list("firebrick", 2, "dashed", 5)
tenSeasons <- list("chocolate1", 2, "dashed", 10)
fifteenSeasons <- list("chocolate3", 2, "dashed", 15)
d %>% group_by(HomeTeam) %>%
summarise(Seasons = n()*2/38) %>%
ggplot(aes(x = reorder(HomeTeam, Seasons), y = Seasons, fill = HomeTeam)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
coord_flip() +
geom_hline(yintercept=fiveSeasons[[4]], linetype=fiveSeasons[[3]], size=fiveSeasons[[2]], color = fiveSeasons[[1]]) +
geom_hline(yintercept=tenSeasons[[4]], linetype=tenSeasons[[3]], size=tenSeasons[[2]], color = tenSeasons[[1]]) +
geom_hline(yintercept=fifteenSeasons[[4]], linetype=fifteenSeasons[[3]], size=fifteenSeasons[[2]], color = fifteenSeasons[[1]])
fiveSeasons <- list("firebrick", 2, "dashed", 5)
tenSeasons <- list("chocolate1", 2, "dashed", 10)
fifteenSeasons <- list("chocolate3", 2, "dashed", 15)
twentySeasons <- list("cyan", 2, "dashed", 20)
d %>% group_by(HomeTeam) %>%
summarise(Seasons = n()*2/38) %>%
ggplot(aes(x = reorder(HomeTeam, Seasons), y = Seasons, fill = HomeTeam)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
coord_flip() +
ggtitle("Number of seasons teams have played in the PL since 1995") +
geom_hline(yintercept=fiveSeasons[[4]], linetype=fiveSeasons[[3]], size=fiveSeasons[[2]], color = fiveSeasons[[1]]) +
geom_hline(yintercept=tenSeasons[[4]], linetype=tenSeasons[[3]], size=tenSeasons[[2]], color = tenSeasons[[1]]) +
geom_hline(yintercept=fifteenSeasons[[4]], linetype=fifteenSeasons[[3]], size=fifteenSeasons[[2]], color = fifteenSeasons[[1]]) +
geom_hline(yintercept=twentySeasons[[4]], linetype=twentySeasons[[3]], size=twentySeasons[[2]], color = twentySeasons[[1]])
fiveSeasons <- list("firebrick", 2, "dashed", 5)
tenSeasons <- list("chocolate3", 2, "dashed", 10)
fifteenSeason <- list("chocolate1", 2, "dashed", 15)
twentySeasons <- list("cyan", 2, "dashed", 20)
d %>% group_by(HomeTeam) %>%
summarise(Seasons = n()*2/38) %>%
ggplot(aes(x = reorder(HomeTeam, Seasons), y = Seasons, fill = HomeTeam)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
coord_flip() +
ggtitle("Number of seasons teams have played in the PL since 1995") +
geom_hline(yintercept=fiveSeasons[[4]], linetype=fiveSeasons[[3]], size=fiveSeasons[[2]], color = fiveSeasons[[1]]) +
geom_hline(yintercept=tenSeasons[[4]], linetype=tenSeasons[[3]], size=tenSeasons[[2]], color = tenSeasons[[1]]) +
geom_hline(yintercept=fifteenSeasons[[4]], linetype=fifteenSeasons[[3]], size=fifteenSeasons[[2]], color = fifteenSeasons[[1]]) +
geom_hline(yintercept=twentySeasons[[4]], linetype=twentySeasons[[3]], size=twentySeasons[[2]], color = twentySeasons[[1]])
d %>% group_by(HomeTeam) %>%
summarise(Seasons = n()*2/38) %>%
ggplot(aes(x = reorder(HomeTeam, Seasons), y = Seasons, fill = HomeTeam)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
coord_flip() +
ylab("Teams") +
guides(fill=FALSE) +
ggtitle("Number of seasons teams have played in the PL since 1995") +
geom_hline(yintercept=fiveSeasons[[4]], linetype=fiveSeasons[[3]], size=fiveSeasons[[2]], color = fiveSeasons[[1]]) +
geom_hline(yintercept=tenSeasons[[4]], linetype=tenSeasons[[3]], size=tenSeasons[[2]], color = tenSeasons[[1]]) +
geom_hline(yintercept=fifteenSeasons[[4]], linetype=fifteenSeasons[[3]], size=fifteenSeasons[[2]], color = fifteenSeasons[[1]]) +
geom_hline(yintercept=twentySeasons[[4]], linetype=twentySeasons[[3]], size=twentySeasons[[2]], color = twentySeasons[[1]])
d %>% group_by(HomeTeam) %>%
summarise(Seasons = n()*2/38) %>%
ggplot(aes(x = reorder(HomeTeam, Seasons), y = Seasons, fill = HomeTeam)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
coord_flip() +
xlab("Teams") +
guides(fill=FALSE) +
ggtitle("Number of seasons teams have played in the PL since 1995") +
geom_hline(yintercept=fiveSeasons[[4]], linetype=fiveSeasons[[3]], size=fiveSeasons[[2]], color = fiveSeasons[[1]]) +
geom_hline(yintercept=tenSeasons[[4]], linetype=tenSeasons[[3]], size=tenSeasons[[2]], color = tenSeasons[[1]]) +
geom_hline(yintercept=fifteenSeasons[[4]], linetype=fifteenSeasons[[3]], size=fifteenSeasons[[2]], color = fifteenSeasons[[1]]) +
geom_hline(yintercept=twentySeasons[[4]], linetype=twentySeasons[[3]], size=twentySeasons[[2]], color = twentySeasons[[1]])
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(result, count, 3:5)%>%
mutate(result = factor(result, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = count, fill = result)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
facet_wrap(.~venue)
}
wdlBalance(team = "Chelsea")
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(result, count, 3:5)%>%
mutate(result = factor(result, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = count, fill = result)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90))
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(result, count, 3:5)%>%
mutate(result = factor(result, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = count, fill = result)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90))
}
wdlBalance(team = "Chelsea")
wdlBalance(team = "Man City")
wdlBalance(team = "Everton")
wdlBalance(team = "Liverpool")
wdlBalance(team = "Arsenal")
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
do.call(ggarrange, c(plotlist = absDeviationsPlots, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
ggtitle(team) +
theme(axis.text.x.bottom = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18)) +
theme(axis.text.x.bottom = element_text(angle = 90))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
ggtitle(team) +
theme(axis.text.x.bottom = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
wdlBalance <- function(dataset = d, team = ""){
dataset %>%
filter(HomeTeam == team | AwayTeam == team) %>%
mutate(venue = ifelse(HomeTeam == team, "H", "A"),
result = ifelse(HomeTeam == team & FTR == "H", "W",
ifelse(AwayTeam == team & FTR == "A", "W",
ifelse(HomeTeam == team & FTR == "A", "L",
ifelse(AwayTeam == team & FTR == "H", "L",
ifelse(FTR == "D", "D", NA)))))) %>%
group_by(Season, venue) %>%
summarise(W = sum(result == "W"),
D = sum(result == "D"),
L = sum(result == "L")) %>%
gather(Outcome, Games, 3:5)%>%
mutate(Outcome = factor(Outcome, c("L", "D", "W"))) %>%
ggplot(aes(x = Season, y = Games, fill = Outcome)) +
geom_bar(stat = "identity") +
ggtitle(team) +
theme(axis.title.x.bottom = element_blank(),
axis.text.x.bottom = element_text(angle = 90),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(3, "cm"),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
}
wdlTeams <- c("Arsenal", "Man United", "Tottenham", "Chelsea",
"Liverpool", "Man City", "Everton",  "Newcastle")
wdl <- list()
for (teamIndex in 1:length(wdlTeams)) {
var = as.character(wdlTeams[teamIndex])
plot = wdlBalance(team = var)
wdl[[teamIndex]] <- eval(substitute(plot))
}
do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
p <- do.call(ggarrange, c(plotlist = wdl, nrow = 2, ncol = 4, common.legend = TRUE, legend = "bottom"))
annotate_figure(p, top = "Win/Draw/Loss balance of eight teams across all seasons since 1995")
comebacks <- function(dataset = d, period = unique(d$Season)){
dataset %>%
filter(Season %in% period) %>%
mutate(comeback = ifelse(HTHG < HTAG & FTHG > FTAG, 1,
ifelse(HTHG > HTAG & FTHG < FTAG, 1, 0))) %>%
filter(comeback == 1) %>%
group_by(Season) %>%
summarise(comebacks = sum(comeback)) %>%
ggplot(aes(x = Season, y = comebacks)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90))
}
comebacks()
comebacks <- function(dataset = d, period = unique(d$Season)){
dataset %>%
filter(Season %in% period) %>%
mutate(comeback = ifelse(HTHG < HTAG & FTHG > FTAG, 1,
ifelse(HTHG > HTAG & FTHG < FTAG, 1, 0)),
venue = ifelse(HTHG < HTAG & FTHG > FTAG, "H",
ifelse(HTHG > HTAG & FTHG < FTAG, "A", NA))) %>%
filter(comeback == 1) %>%
group_by(Season) %>%
summarise(comebacks = sum(comeback)) %>%
ggplot(aes(x = Season, y = comebacks)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
facet_wrap(venue~.)
}
comebacks()
comebacks <- function(dataset = d, period = unique(d$Season)){
dataset %>%
filter(Season %in% period) %>%
mutate(comeback = ifelse(HTHG < HTAG & FTHG > FTAG, 1,
ifelse(HTHG > HTAG & FTHG < FTAG, 1, 0)),
venue = ifelse(HTHG < HTAG & FTHG > FTAG, "H",
ifelse(HTHG > HTAG & FTHG < FTAG, "A", NA))) %>%
filter(comeback == 1) %>%
group_by(Season, venue) %>%
summarise(comebacks = sum(comeback)) %>%
ggplot(aes(x = Season, y = comebacks)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90)) +
facet_wrap(venue~.)
}
comebacks()
comebacks <- function(dataset = d, period = unique(d$Season)){
dataset %>%
filter(Season %in% period) %>%
mutate(comeback = ifelse(HTHG < HTAG & FTHG > FTAG, 1,
ifelse(HTHG > HTAG & FTHG < FTAG, 1, 0)),
venue = ifelse(HTHG < HTAG & FTHG > FTAG, "H",
ifelse(HTHG > HTAG & FTHG < FTAG, "A", NA))) %>%
filter(comeback == 1) %>%
group_by(Season, venue) %>%
summarise(comebacks = sum(comeback)) %>%
ggplot(aes(x = Season, y = comebacks, fill = venue)) +
geom_bar(stat = "identity") +
theme(axis.text.x.bottom = element_text(angle = 90))
}
comebacks()
comebacks <- function(dataset = d, period = unique(d$Season)){
dataset %>%
filter(Season %in% period) %>%
mutate(comeback = ifelse(HTHG < HTAG & FTHG > FTAG, 1,
ifelse(HTHG > HTAG & FTHG < FTAG, 1, 0)),
Venue = ifelse(HTHG < HTAG & FTHG > FTAG, "H",
ifelse(HTHG > HTAG & FTHG < FTAG, "A", NA))) %>%
filter(comeback == 1) %>%
group_by(Season, Venue) %>%
summarise(Comebacks = sum(comeback)) %>%
ggplot(aes(x = Season, y = Comebacks, fill = Venue)) +
geom_bar(stat = "identity") +
ggtitle("Number of HT-FT comebacks")
theme(axis.text.x.bottom = element_text(angle = 90))
}
comebacks()
comebacks <- function(dataset = d, period = unique(d$Season)){
dataset %>%
filter(Season %in% period) %>%
mutate(comeback = ifelse(HTHG < HTAG & FTHG > FTAG, 1,
ifelse(HTHG > HTAG & FTHG < FTAG, 1, 0)),
Venue = ifelse(HTHG < HTAG & FTHG > FTAG, "H",
ifelse(HTHG > HTAG & FTHG < FTAG, "A", NA))) %>%
filter(comeback == 1) %>%
group_by(Season, Venue) %>%
summarise(Comebacks = sum(comeback)) %>%
ggplot(aes(x = Season, y = Comebacks, fill = Venue)) +
geom_bar(stat = "identity") +
ggtitle("Number of HT-FT comebacks") +
theme(axis.text.x.bottom = element_text(angle = 90))
}
comebacks()
winsDat %>%
arrange(Date) %>%
ggplot(aes(x = Date, y = goalDiff, group = 1)) +
geom_line() +
geom_point(aes(color = venue), size = 3) +
geom_label_repel(aes(label = label),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
ggtitle(winsTitle) +
ylab("Goal difference") +
theme(axis.text.x.bottom = element_text(angle = 90))
noWin <- streakFun("X")
noWinTitle <- paste("Longest winning streak:", noWin[[2]], "by", noWin[[1]])
noWinDat <- noWin[[3]]
noWinDat %>%
arrange(Date) %>%
ggplot(aes(x = Date, y = goalDiff, group = 1)) +
geom_line() +
geom_point(aes(color = venue), size = 3) +
geom_label_repel(aes(label = label),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
ggtitle(noWinTitle) +
ylab("Goal difference") +
theme(axis.text.x.bottom = element_text(angle = 90))
undefeated <- streakFun("U")
undefeatedTitle <- paste("Longest undefeated streak:", undefeated[[2]], "by", undefeated[[1]])
undefeatedDat <- undefeated[[3]]
undefeatedDat %>%
arrange(Date) %>%
ggplot(aes(x = Date, y = goalDiff, group = 1)) +
geom_line() +
geom_point(aes(color = venue), size = 3) +
geom_label_repel(aes(label = label),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
ggtitle(undefeatedTitle) +
ylab("Goal difference") +
theme(axis.text.x.bottom = element_text(angle = 90))
