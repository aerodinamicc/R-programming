cru <- read_csv("E:/R/EnvMon/cru_kg.csv")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
cru <- read_csv("E:/R/EnvMon/cru_kg.csv")
rm(cru)
library(tidyverse)
head(pew)
pew
iris
pewdata
install.packages("pewdata")
pew
library("efficient")
install.packages("efficient")
pew
library(efficient)
library(efficient)
library("efficient")
data(pew)
library(ncdf4)
library(lubridate)
library(tidyverse)
ncdf_to_tidy <- function(nc, .var, .start, .time = "time",
.res = "1 day", .station = "station",
.lon = "lon", .lat = "lat") {
time <- ncvar_get(nc, .time)
time <- seq(as.Date(.start), by = .res, length.out = length(time))
year <- year(time)
month <- month(time)
day <- day(time)
var_tidy <- ncvar_get(nc, .var) %>%
as_tibble %>%
mutate(year = year,
month = month,
day = day) %>%
gather(station, .var, starts_with("V"))
landid <- tibble(station = ncvar_get(nc, .station),
lon = ncvar_get(nc, .lon),
lat = ncvar_get(nc, .lat)) %>%
mutate(station = paste0("V", station + 1))
left_join(var_tidy, landid, by = "station") %>%
select(lon, lat, year, month, day, .var)
}
trmm <- nc_open("C:/Users/Jupiter/Desktop/Amazon/zlatan/TRMM_Amazon_1998_April_2017.nc")
trmm_tidy <- ncdf_to_tidy(trmm, .var = "prec", .start = "1998-01-01")
monthly_trmm_prec <- trmm_tidy %>% group_by(year, month,lon, lat) %>% summarise(monthly_avg_prec = mean(.var), max_values = max(.var))
View(monthly_trmm_prec)
max(monthly_trmm_prec$max_values)
max(monthly_trmm_prec$monthly_avg_prec)
monthly_trmm_prec <- trmm_tidy %>% group_by(day, year, month,lon, lat) %>% summarise(monthly_avg_prec = mean(.var), max_values = max(.var))
View(monthly_trmm_prec)
remove(monthly_trmm_prec)
monthly_trmm_prec <- trmm_tidy %>% group_by(year, month,lon, lat) %>% summarise(monthly_avg_prec = sum(.var), max_values = max(.var))
View(monthly_trmm_prec)
View(monthly_trmm_prec)
monthly_trmm_prec <- trmm_tidy %>% group_by(year, month,lon, lat) %>% summarise(monthly_avg_prec = sum(.var))
monthly_trmm_prec <- trmm_tidy %>% group_by(year, month,lon, lat) %>% summarise(monthly_prec = sum(.var))
two000Summer <- monthly_trmm_prec %>%
filter(year == 2000 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_avg_prec)) + coord_fixed()
two005Summer <- monthly_trmm_prec %>%
filter(year == 2005 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_avg_prec)) + coord_fixed()
two016Summer <- monthly_trmm_prec %>%
filter(year == 2016 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_avg_prec)) + coord_fixed()
wetSeason2007 <- monthly_trmm_prec %>%
filter(year == 2007 & month == 2) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_avg_prec)) + coord_fixed()
two000Summer
two005Summer
two016Summer
wetSeason2007
two000Summer <- monthly_trmm_prec %>%
filter(year == 2000 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two005Summer <- monthly_trmm_prec %>%
filter(year == 2005 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two016Summer <- monthly_trmm_prec %>%
filter(year == 2016 & month == 7) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
wetSeason2007 <- monthly_trmm_prec %>%
filter(year == 2007 & month == 2) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two000Summer
two005Summer
two016Summer
wetSeason2007
two000Summer <- monthly_trmm_prec %>%
filter(year == 2000 & month == 9) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two005Summer <- monthly_trmm_prec %>%
filter(year == 2005 & month == 9) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two016Summer <- monthly_trmm_prec %>%
filter(year == 2016 & month == 9) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
wetSeason2007 <- monthly_trmm_prec %>%
filter(year == 2007 & month == 2) %>%
select(lon,lat,monthly_prec) %>%
ggplot() + geom_tile(aes(x=lon, y = lat, fill = monthly_prec)) + coord_fixed()
two000Summer
two005Summer
two016Summer
wetSeason2007
write.csv(monthly_trmm_prec, file = "monthly_trmm_prec.csv")
library(tidyverse)
library("tidyverse", lib.loc="~/R/win-library/3.3")
install.packages("tidyverse")
library(tidyverse)
library(regmap)
library(ncdf4)
library(lubridate)
library(tidyverse)
cwd <- function(x, clim_year_start = 10, pet = 100) {
x <- x %>%
arrange(year, month) %>%
# compute precipitation of previous month
mutate(prev_prec = lag(monthly_prec, default = 0))
# restrict to complete year for easier blocking
if (x$month[1] != 1) {
n <- nrow(x)
x <- x[which(x$month == 1)[1]:n, ]
}
if (tail(x$month, 1) != 12) {
n <- nrow(x)
x <- x[1:tail(which(x$month == 12), 1), ]
}
# create potentially altered year cycle for climatological year
clim_year_months <- c(1:12)
if (clim_year_start != 1) {
clim_year_months <- clim_year_months[c(clim_year_start:12, 1:(clim_year_start - 1))]
}
# loop in month-wise blocks
for (i in 1:12) {
.month <- clim_year_months[i]
.prev_month <- clim_year_months[i - 1]
if (.month == clim_year_start) {
x$wd[x$month == .month] <- 0
} else {
wd0 <- x$wd[x$month == .prev_month] - pet + x$monthly_prec[x$month == .month]
x$wd[x$month == .month] <- ifelse(wd0 >= 0, 0, wd0)
}
}
x
}
ncdf_to_tidy <- function(nc, .var, .start, .time = "time",
.res = "1 day", .station = "station",
.lon = "lon", .lat = "lat") {
time <- ncvar_get(nc, .time)
time <- seq(as.Date(.start), by = .res, length.out = length(time))
year <- year(time) %>% as.integer
month <- month(time) %>% as.integer
day <- day(time)
var_tidy <- ncvar_get(nc, .var) %>%
as_tibble %>%
mutate(year = year,
month = month,
day = day) %>%
gather(station, .var, starts_with("V"))
landid <- tibble(station = ncvar_get(nc, .station),
lon = ncvar_get(nc, .lon),
lat = ncvar_get(nc, .lat)) %>%
mutate(station = paste0("V", station + 1))
left_join(var_tidy, landid, by = "station") %>%
select(lon, lat, year, month, day, .var)
}
load("C:/Users/Jupiter/Desktop/Amazon/DA/.RData")
load("G:/Amazon/DA/.RData")
View(amazonWD)
View(anomalies)
View(anomaliesSd)
library(installr)
97/10
97//10
97%/%10
spacedNumbers <- function(x)
{
if (x < 1000000000) {
millions <- x %/% 1000000
return(paste(millions, x%/%1000 - millions * 1000, x %% 1000, sep = " "))
}
else if(x < 1000000){
return(paste(x%/%1000, x %% 1000, sep = " "))
}
else if (x < 1000) {
return(as.character(x))
}
}
spacedNumbers(45678965)
spacedNumbers(45678)
else{
return(as.character(x))
}
spacedNumbers <- function(x)
{
if (x > 999999) {
millions <- x %/% 1000000
return(paste(millions, x%/%1000 - millions * 1000, x %% 1000, sep = " "))
}
else if(x > 1000){
return(paste(x%/%1000, x %% 1000, sep = " "))
}
else{
return(as.character(x))
}
}
spacedNumbers(45678)
spacedNumbers(45678965)
load("G:/R-programming/kaggle/Japan/BND_JOINED_COMPUTED.RData")
#Population leaflet----
leaflet(bnd) %>%
addTiles(urlTemplate = "//stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png") %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.7,
fillColor = ~colorQuantile("YlOrRd", pop)(pop),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
popup=paste(spacedNumbers(bnd$pop), bnd$laa, sep = ", "),
popupOptions = popupOptions(closeOnClick = TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#install.packages(c("tidyverse", "ggrepel", "lubridate", "maptools", "ggpubr", "ggmap", "leaflet", "rgdal", "raster"))
library(tidyverse)
library(ggrepel)
library(lubridate)
library(maptools)
library(ggpubr)
library(ggmap)
library(leaflet)
library(rgdal)
library(raster)
library(sf)
library(stringr)
#Population leaflet----
leaflet(bnd) %>%
addTiles(urlTemplate = "//stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png") %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.7,
fillColor = ~colorQuantile("YlOrRd", pop)(pop),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
popup=paste(spacedNumbers(bnd$pop), bnd$laa, sep = ", "),
popupOptions = popupOptions(closeOnClick = TRUE))
spacedNumbers(45678965)
spacedNumbers(1678965)
else if(x > 999){
return(paste(x%/%1000, x %% 1000, sep = " "))
}
spacedNumbers <- function(x)
{
if (x > 999999) {
millions <- x %/% 1000000
return(paste(millions, x%/%1000 - millions * 1000, x %% 1000, sep = " "))
}
else if(x > 999){
return(paste(x%/%1000, x %% 1000, sep = " "))
}
else{
return(as.character(x))
}
}
#Population leaflet----
leaflet(bnd) %>%
addTiles(urlTemplate = "//stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png") %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.7,
fillColor = ~colorQuantile("YlOrRd", pop)(pop),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
popup=paste(spacedNumbers(bnd$pop), bnd$laa, sep = ", "),
popupOptions = popupOptions(closeOnClick = TRUE))
spacedNumbers(3700420)
spacedNumbers(3714200)
bnd[laa == "Koganei Shi"]
bnd[laa == "Koganei Shi",]
bnd_joined[laa == "Koganei Shi",]
bnd_joined[,laa == "Koganei Shi"]
View(bnd_joined)
bnd_joined[,"laa" == "Koganei Shi"]
