parameter <- function(R)
obikolka <- 2*pi*R
pkgs <- c("tidyverse", "rmarkdown",
"ggmap", "ncdf4")
install.packages(pkgs,
lib = "H:/Documents/R/win-library/3.3",
type = "win.binary")
View(parameter)
View(parameter)
parameter <- function(R){
2*3.14*R
}
parameter(2)
19%%6,3
19%%6.3
19%%6.3
19 %% 6.3
side <- 5
status <- 'hungry'
bird_count <- c(12,13,14,15)
months <- c(May, June, July, August)
months <- c('May', 'June', 'July', 'August')
count <- bird_count + months
names(bird_count) <- months
bird_count
HighPop <- bird_count(birdcount > 13)
HighPop <- bird_count [birdcount > 13]
HighPop <- bird_count [bird_count > 13]
TotalHighPop <- sum(HighPop)
print(HihgPop)
HihgPop
HighPop
HighMOnths <- sum(bird_count > 0)
HighMOnths
HighMonths2 <- bird_count[-1,-2]
HighMonths2 <- bird_count[-1]
HighMonths2 <- bird_count[-1:-2]
HighMonths2 <- bird_count[-1:-3]
HighMonths2 <- bird_count[c(3,4)]
HighMonths2 <- bird_count[c(1,4)]
store <- bird_count > 13
store
!store
remain <- !store[TRUE]
remain <- !store[!store == TRUE]
remain
ant_species2 <- c(140,110,88,12,9)
ant_species1 <- c(24,35,17,62,76)
days <- c('Monday,'Tuesday', 'Wednesday', 'Thursday','Friday')
days <- c('Monday,'Tuesday','Wednesday', 'Thursday','Friday')
days <- c('Monday,'Tuesday', 'Wednesday','Thursday', 'Friday')
days <- c('Monday,'Tuesday','Wednesday','Thursday', 'Friday')
days <- c("MOnday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(ant_species1)
names(ant_species1) <- days
names(ant_species2) <- days
ant_species1
data <- matrix(ant_species1 + ant_species2, nrow = 2, ncol = 5, FALSE)
data
data <- matrix(ant_species1 + ant_species2, nrow = 2, ncol = 5, FALSE, days)
data <- matrix(ant_species1 + ant_species2, nrow = 2, ncol = 5, FALSE, list(days)
data <- matrix(ant_species1 + ant_species2, nrow = 2, ncol = 5, FALSE, list(days))
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5*7
x <- 5+7
x
y <- x-3
y
z<- c(1.1, 9, 3.14)
?c
z
t <- c(z,555,z)
c(z,555,z)
z*2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div<- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
c(1,2,3,4) + c(0,10,100)
z*2 +1000
my_div
5+7
x<-5+7
x
y<-x-3
y
c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(c,555,z)
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10, 100)
c(1,2,3,4) + c(0,10, 100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls
ls()
list.files()
?list.files
args(list.files)
old.dir<- dir()
old.dir<- getwd()
dir.create(testdir)
dir.create("testdir)
getwd()
?dir.create
dir.create(testdir)
?dir.create
dir.create(\\\\nas.ads.mwn.de/ga45god/Documents/testdir)
dir.create(/testdir)
dir.create(testdir, recursive=FALSE)
dir.create(\\\\nas.ads.mwn.de/ga45god/Documents/testdir, recursive=FALSE)
dir.create(nas.ads.mwn.de/ga45god/Documents/testdir, recursive=FALSE)
dir.create(*/testdir, recursive=FALSE)
dir.create(*testdir, recursive=FALSE)
dir.create(testdir, recursive=FALSE)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy(mytest2.R, "mytest3.R")
file.copy("mytest2.R", "mytest3.R")
args(file.path)
file.path("mytest3.R")
file.path("folder1/mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2/testdir3")
dir.create("testdir2","testdir3")
dir.create("testdir2","testdir3", recursive = T)
dir.create("testdir2","testdir3", recursive = TRUE)
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
setwd(old.dir)
unlin("testdir")
unlink("testdir")
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?:
?(:)
?':'
seq(1,20)
seq(1,20, by=0.5)
seq(1,10, by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, lenght = 30)
seq(5, 10, length =  = 30)
seq(5, 10, length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(1,2,3), times =10)
rep(c(0,1,2), times =10)
rep(c(0,1,2), each =10)
num_vect<- c(0.5, 55, -10, 6)
tf<-num_vect< 1
tf
num_vect<= 6
num_vect>= 6
my_char<- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Z")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="")
paste(LETTERS, 1:4, sep="-")
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
x <- c(44,NA, 5, NA)
x*3
y <- rnorm(1000)
z <- (NA, 1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na, na.rm = TRUE)
sum(my_na)
my_data
sum(my_data[1:20])
sum(my_na[1:20])
0/0
Inf/Inf
Inf-Inf
x
x[1:10]
x[is.na(s)]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar, "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(my_matrix, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix, patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
x <- c(4, TRUE)
class(x)
mydata = read.csv("H:\hw1_data.csv")
mydata = read.csv("H:/hw1_data.csv")
View(mydata)
mydata[2,]
mydata[1:2,]
mydata[length(mydata):length(mydata)-1,]
tail(mydata)
mydata[length(mydata)-1, length(mydata),]
mydata[length(mydata)-1: length(mydata),]
mydata[43,1]
mydata[47,1]
sum(is.na(mydata$Ozone))
?average
median(mydata$Ozone[!is.na(mydata$Ozone)])
mydata[]
solar<-mydata[mydata$Ozone>31 & Temp > 90]
solar<-mydata[mydata$Ozone>31 & mydata$Temp > 90]
solar<-mydata[mydata$Ozone>31 & mydata$Temp > 90]
solar<-mydata[mydata$Ozone>31 & mydata$Temp > 90,]
median(solar$Solar.R)
solar
median(solar$Solar.R)
solar<-mydata[!is.na(mydata) & $mydata$Ozone>31 & mydata$Temp > 90,]
solar<-mydata[!is.na(mydata) & mydata$Ozone>31 & mydata$Temp > 90,]
solar
View(solar)
View(solar)
solar<-mydata[!is.na(mydata) & mydata$Ozone>31 & mydata$Temp > 90,]
month <- mydata[mydata$Month == 6]
month <- mydata[mydata$Month == 6,]
median(month$Temp)
install.packages(swirl)
"swirl
install.packages("swirl")
data <- read.csv(H:\hw1_data.csv)
data <- read.csv(H:/hw1_data.csv)
data <- read.csv(//H:/hw1_data.csv)
data <- read.csv("H:/hw1_data.csv")
summary(data)
solozone <- data[!is.na(data§Temp) & !is.na(data$Ozone)]
solozone <- data(!is.na(data§Temp) & !is.na(data$Ozone)
solozone <- data(!is.na(data$Temp) & !is.na(data$Ozone)
solozone <- data[!is.na(data$Temp) & !is.na(data$Ozone,]
solozone <- !is.na(data$Temp) & !is.na(data$Ozone)
solozonefit <- data$Temp > 31 $ data$Ozone > 90
solozonefit <- data$Temp > 31 & data$Ozone > 90
solozonefit <- solozone$Temp > 31 & solozone$Ozone > 90
solozonefit <- solozone$Temp > 31 & solozone$Ozone > 90
median(data$Ozone[!is.na(data$Ozone)])
above <- data$Temp > 31 & data$Ozone > 90
median(data$Solar.R)
median(data$Solar.R[above])
above
above <- data$Solar.R[data$Temp > 31 & data$Ozone > 90]
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90])
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90] & !is.na(data$Temp) & !is.na(data$Ozone))
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90 & !is.na(data$Temp) & !is.na(data$Ozone)]
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90 & !is.na(data$Temp) & !is.na(data$Ozone)]
above <- data$Temp > 31 & data$Ozone > 90 & !is.na(data$Temp) & !is.na(data$Ozone)
median(data$Solar.R[above])
above
above <- !is.na(data$Temp) & !is.na(data$Ozone) & data$Temp > 31 & data$Ozone > 90)
above <- !is.na(data$Temp) & !is.na(data$Ozone) & data$Temp > 31 & data$Ozone > 90
median(data$Solar.R[above])
mean(data$Temp[data$Month == 6])
?max
max(data$Ozone[data$Month == 5])
max(data$Ozone[!is.na(data$Ozone) & data$Month == 5])
meadian(data$Solar.R[data$Temp > 31 & data$Ozone > 90])
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90])
sol <- median(data$Solar.R[data$Temp > 31 & data$Ozone > 90])
sol
NA > §!
NA > 31
median(c(31,90,NA))
sol <- median(data$Solar.R[!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90])
sol
data$Solar.R[!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90]
data$Temp > 31 & data$Ozone >90
!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90
sol <- median(data$Solar.R[!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90])
class(sol)
View(data)
sol <- data.frame(data$Solar.R[!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90])
View(sol)
median(sol)
median(sol$data.Solar.R..is.na.data.Temp....data.Temp...31....is.na.data.Ozone....)
sol <- data.frame(data$Solar.R[!is.na(data$Temp) & data$Temp > 90 & !is.na(data$Ozone) & data$Ozone > 30])
median(sol$data.Solar.R..is.na.data.Temp....data.Temp...90....is.na.data.Ozone....)
temp <- !is.na(data$Temp) & data$Temp>90
ozone <- !is.na(data$Ozone) & data$Ozone > 31
good <- temp & ozone
median(data$Solar.R[good])
good2 <- complete.cases(data)
median(data$Solar.R[good2])
install_from_swirl("R Programming")
library(swirl)
install_from_swirl("R Programming")
swirl()
T == F
TRUE == FALSE
TRUE == TRUE
FALSE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10<=10
5 == 7
5 != 7
!(5==7)
F & F
FALSE & FALSE
TRUE & c(TRUE; FALSE; FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical("twins", "twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
ncol(data)
?lm
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
download.file("https://api.github.com/users/jtleek/repos", "E:/R/Coursera/GCD/Week 1")
setwd("E:/R/Coursera/GCD/Week 1")
download.file("https://api.github.com/users/jtleek/repos", "jsondata")
View(jsonData)
jsonData <- fromJSON("jsondata")
View(jsonData)
names(jsonData$owner)
jsonData$owner$login
View(jsonData)
View(jsonData)
myjson <- toJSON(iris, pretty=TRUE)
myjson
cat(myjson)
cat(myjson)
install.packages("RMySQL")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb)
ucscDb <- dbConnect(MySQL(), user="genome",db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
lenght(allTables)
hg19 <- dbConnect(MySQL(), user="genome",db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
lenght(allTables)
hg19 <- dbConnect(MySQL(), user="genome",db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2") #Getting the data out of the dataset
head(affyData)
query <- dbSendQuery("select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
dim(affyMisSmall)
affyMisSmall <- fetch(query, n=10); dbClearResult(query);
#n=10, says only the first 10 records #dbClearResult(query) is used to remove the query from the remote server
dim(affyMisSmall)
source("http://bioconductor.org/bioLite.R")
biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
#Create groups
created = h5createFile("example.h5", "foo")
created = h5createFile("example.h5", "baa")
created = h5createFile("example.h5", "foo/foobaa")
h5ls("example.h5")
created = h5createFile("example.h5")
#Create groups
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A=matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A") # what/to/where
B = array(seq(0.1,2.0,by=0.1), dim=c(5,2,2))
attr(B, "scale") <- "liter"
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes = TRUE)
xpathSAplly(html, "//title", xmlValue)
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes = TRUE)
xpathSAplly(html, "//title", xmlValue)
install.packages("XML")
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes = TRUE)
xpathSAplly(html, "//title", xmlValue)
xpathSApply(html, "//title", xmlValue)
xpathSApply(html, "//td[@id=col-citedby']", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
names(html)
htmlNames(html)
?htmlRoot
??htmlRoot
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
html[[td[@id='col-citedby']"]]
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
library(httr);html2= GET (url)
content2 = content(html2, as="text")
parsedHtml = htmlParse(content2, asText=TRUE)
xpathSApply(parsedHtml, "//tittle", xmlValue)
pg2 = GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user", "passwd"))
pg2
names(pg2)
library(httr)
