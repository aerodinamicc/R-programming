evaluate <- function(func, dat){
func <- function(dat){
sum(dat)
median(dat)
floor(dat)
}
}
evaluate(sum, c(4,5,10))
evaluate <- function(func){
func <- function(dat){
sum(dat)
median(dat)
floor(dat)
}
}
evaluate(sum, c(4,5,10))
evaluate <- function(func, dat){
func <- function(dat){
sum(dat)
median(dat)
floor(dat)
}
}
evaluate(sum, c(4,5,10))
x <- evaluate(sum, c(4,5,10))
View(x)
View(x)
View(x)
add_two_numbers <- function(num1, num2){
num1 + num2
}
multiply_two_numbers <- function(num1, num2){
num1 * num2
}
some_function <- function(func){
func(2, 4)
add_two_numbers <- function(num1, num2){
num1 + num2
}
multiply_two_numbers <- function(num1, num2){
num1 * num2
}
some_function <- function(func){
func(2, 4)
}
multiply_two_numbers(some_function)
some_function(multiply_two_numbers)
some_function
func
dat
evaluate
evaluate <- function(func, dat){
func <- function(dat){
sum(dat)
median(dat)
floor(dat)
}
}
evaluate(sum, c(5,6))
x <- evaluate(sum, c(5,6))
View(x)
evaluate <- function(func, dat){
dat <- function(func){
sum(dat)
median(dat)
floor(dat)
}
}
x <- evaluate(sum, c(5,6))
View(x)
evaluate <- function(func, dat){
sum(dat)
median(dat)
floor(dat)
}
evaluate(sum, c(5,6))
evaluate <- function(dat){
sum(dat)
}
evaluate(sum, c(5,6))
evaluate(c(5,6))
evaluate <- function(dat){
sum(dat)
median(dat)
floor(dat)
}
evaluate(c(5,6,7,8))
evaluate <- function(dat){
sum(dat)
median(dat)
floor(dat)
}
evaluate(c(5,6,7,8))
evaluate(5,6,7,8)
evaluate(c(5,6,7,8))
evaluate <- function(dat){
median(dat)
}
evaluate(c(5,6,7,8))
evaluate <- function(dat){
print(median(dat))
}
evaluate(c(5,6,7,8))
evaluate <- function(dat){
print(sum(dat))
print(median(dat))
print(floor(dat))
}
evaluate(c(5,6,7,8))
evaluate <- function(func, dat){
func <- function(dat){
print(sum(dat))
print(median(dat))
print(floor(dat))
}
}
evaluate(sum, c(4,5,6,7))
evaluate <- function(func, dat){
dat <- function(func){
print(sum(dat))
print(median(dat))
print(floor(dat))
}
}
evaluate(sum, c(4,5,6,7))
evaluate <- function(dat){
c(sum(dat),
median(dat),
floor(dat))
}
evaluate(c(4,5,6,7))
arithmetic <- function(myfunc, arg1, arg2) { myfunc(arg1, arg2) }
add <- function(x, y) { return(x + y) }
subtract <- function(x, y) { return(x - y) }
multiply <- function(x, y) { return(x * y) }
divide <- function(x, y) { return(x / y) }
arithmetic(substract, 4 , 2)
arithmetic(subtract, 4 , 2)
evaluate <- function(func, dat) { func(dat) }
sum <- function(dat) { return(sum(x + y) }
median <- function(dat) { return(median(dat) }
floor <- function(dat) { return(floor(dat)) }
evaluate <- function(func, dat) { func(dat) }
sum <- function(dat) { return(sum(dat) }
median <- function(dat) { return(median(dat) }
floor <- function(dat) { return(floor(dat)) }
evaluate(sum, c(4 , 2)
evaluate(sum, c(4 , 2))
evaluate <- function(func, dat) {
func(dat)
}
evaluate(sum, c(4,5,6,7,89,9))
evaluate(median, c(4,5,6,7,89,9))
evaluate(mean, c(4,5,6,7,89,9))
evaluate(floor, c(4,5,6,7,89,9))
evaluate(floor, 11.1
evaluate(floor, 11.1)
evaluate(floor, 11,1)
evaluate(floor, 11.1)
?floor
11.1%%
11.1%%1
11.1%%0.1
11.1%%11
evaluate <- function(func, dat) {
func(dat)}
sum <- function(dat) {sum(dat)}
median <- function(dat) {median(dat)}
floor <- function(dat) {floor(dat)}
floor <- function(dat) {floor(dat)}
evaluate(sum, c(4,5,6,7,89,9))
evaluate <- function(func, dat) {
func(dat){
sum <- function(dat) {sum(dat)}
median <- function(dat) {median(dat)}
floor <- function(dat) {floor(dat)}
}
evaluate <- function(func, dat) {
func(dat){
sum <- function(dat) {sum(dat)}
median <- function(dat) {median(dat)}
floor <- function(dat) {floor(dat)}
}
}
median(c(7, 40, 9))
median(7, 40, 9)
?median
mean(c(7, 40, 9))
median(c(7, 40, 9))
median(1:4)
median(1:4)
median(c(7, 40, 9))
?quantile
c <- matrix(rnorm(20, sd=5),4,4)
quantile(c, probs = c(0.25, 0.75))
apply(x, 1, quantile, probs=c(0.25, 0.75))
apply(c, 1, quantile, probs=c(0.25, 0.75))
list(rep(1:4), rep(2:3), rep(3:2), rep(4:1))
list(rep(1,4), rep(2,3), rep(3,2), rep(4,1))
mapply(rep, 1:4, 4:1)
?mapply
?gl
swirl(0)
swirl()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo(flags)
class(f;ags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(cls_flags, class, simplify = TRUE)
sapply(flags, class, simplify = TRUE)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[11:17]
flags_colors <- flags[,11:17]
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes[,19:23]
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat < sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(flag_shapes)
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags_colors, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(unique_vals, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
# OR:
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
library(httr)
library(c(tidyverse, httr))
library(tidyverse)
library(httr)
install.packages("httr")
install.packages("httr")
library(httr)
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = "c107397b9e99278452028e148d4d006fdd2d9b0d")
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("b78e3a8a8dc146f3a2b998708da5ca32b14ec38a"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("http://developer.github.com/v3/oauth/")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("http://developer.github.com/v3/oauth/"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("https://github.com/login/oauth/authorize")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("https://github.com/login/oauth/authorize"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("https://github.com/login/oauth/authorize")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("c107397b9e99278452028e148d4d006fdd2d9b0d"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("https://github.com/login/oauth/authorize")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
homeTL = GET("https://api.github.com/users/jtleek/repos", myapp)
oauth_endpoints("https://github.com/login/oauth/authorize")
oauth_endpoints("https://github.com/login/oauth/authorize")
oauth_endpoints("https://github.com/login/oauth/authorize")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#    Replace your key and secret below.
myapp <- oauth_app("ZAvalanche",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
?oauth_endpoints
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#    Replace your key and secret below.
myapp <- oauth_app("ZAvalanche",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
?oauth_app
?oauth2.0_token
oauth_endpoints("github")
myapp <- oauth_app("ZAvalanche",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req)
nchar("Z A")
substR("Zlatan", 1, 4)
substr("Zlatan", 1, 4)
paste("Z","A")
paste0("Z","A")
#QUIZ 4
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
setwd("G:/R/Coursera/GCD/Week 4")
download.file(fileUrl, destfile = "Idaho.csv")
library(tidyverse)
ComData <- read_csv("Idaho.csv", col_names = TRUE)
View(ComData)
dim(ComData)
names(ComData) %in% "WGTP"
names(ComData) %in% "wgtp"
names(ComData)
n <- strsplit(names(ComData), "[a-z]+")
n
n <- strsplit(names(ComData), "wgtp")
n[[123]]
GDP <- read_csv("G:/R/Coursera/GCD/Week 3/GDP.csv", skip = 10, col_names = FALSE)
GDP <- GDP[,c(1,2,4,5)]
summary(GDP)
head(GDP)
mean(GDP$X5)
mean(GDP$X5, na.rm = TRUE)
tail(GDP)
GDP <- GDP[complete.cases(GDP), ]
mean(GDP$X5, na.rm = TRUE)
grep("^United",GDP$X4)
EduData <- read_csv("G:/R/Coursera/GCD/Week 3/EduData.csv")
names(EcoData)
names(EduData)
names(GDP) <- c("CountryCode", "Rank", "Country", "GDP")
glo <- merge(GDP, EduData, by.x = "CountryCode", by.y= "CountryCode", all = TRUE)
names(glo)
head(glo)
grep(glo$`Special Notes`, "^Fiscal year end: June")
grep("^Fiscal year end: June", glo$`Special Notes`)
table(grepl("^Fiscal year end: June", glo$`Special Notes`))
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
class(sampleTimes)
library(lubridate)
days <- sapply(sampleTimes, wday)
days
table(days == 2)
year <- function(x) {as.numeric(format(x,'%Y'))}
years <- sapply(sampleTimes, year)
table(years == 2012)
days <- sapply(years, wday)
table(days == 2)
