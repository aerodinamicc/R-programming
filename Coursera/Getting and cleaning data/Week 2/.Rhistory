my_div
getwd()
ls()
x<-9
ls
ls()
list.files()
?list.files
args(list.files)
old.dir<- dir()
old.dir<- getwd()
dir.create(testdir)
dir.create("testdir)
getwd()
?dir.create
dir.create(testdir)
?dir.create
dir.create(\\\\nas.ads.mwn.de/ga45god/Documents/testdir)
dir.create(/testdir)
dir.create(testdir, recursive=FALSE)
dir.create(\\\\nas.ads.mwn.de/ga45god/Documents/testdir, recursive=FALSE)
dir.create(nas.ads.mwn.de/ga45god/Documents/testdir, recursive=FALSE)
dir.create(*/testdir, recursive=FALSE)
dir.create(*testdir, recursive=FALSE)
dir.create(testdir, recursive=FALSE)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy(mytest2.R, "mytest3.R")
file.copy("mytest2.R", "mytest3.R")
args(file.path)
file.path("mytest3.R")
file.path("folder1/mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2/testdir3")
dir.create("testdir2","testdir3")
dir.create("testdir2","testdir3", recursive = T)
dir.create("testdir2","testdir3", recursive = TRUE)
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
setwd(old.dir)
unlin("testdir")
unlink("testdir")
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?:
?(:)
?':'
seq(1,20)
seq(1,20, by=0.5)
seq(1,10, by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, lenght = 30)
seq(5, 10, length =  = 30)
seq(5, 10, length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(1,2,3), times =10)
rep(c(0,1,2), times =10)
rep(c(0,1,2), each =10)
num_vect<- c(0.5, 55, -10, 6)
tf<-num_vect< 1
tf
num_vect<= 6
num_vect>= 6
my_char<- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Z")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="")
paste(LETTERS, 1:4, sep="-")
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
x <- c(44,NA, 5, NA)
x*3
y <- rnorm(1000)
z <- (NA, 1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na, na.rm = TRUE)
sum(my_na)
my_data
sum(my_data[1:20])
sum(my_na[1:20])
0/0
Inf/Inf
Inf-Inf
x
x[1:10]
x[is.na(s)]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar, "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(my_matrix, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix, patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
x <- c(4, TRUE)
class(x)
mydata = read.csv("H:\hw1_data.csv")
mydata = read.csv("H:/hw1_data.csv")
View(mydata)
mydata[2,]
mydata[1:2,]
mydata[length(mydata):length(mydata)-1,]
tail(mydata)
mydata[length(mydata)-1, length(mydata),]
mydata[length(mydata)-1: length(mydata),]
mydata[43,1]
mydata[47,1]
sum(is.na(mydata$Ozone))
?average
median(mydata$Ozone[!is.na(mydata$Ozone)])
mydata[]
solar<-mydata[mydata$Ozone>31 & Temp > 90]
solar<-mydata[mydata$Ozone>31 & mydata$Temp > 90]
solar<-mydata[mydata$Ozone>31 & mydata$Temp > 90]
solar<-mydata[mydata$Ozone>31 & mydata$Temp > 90,]
median(solar$Solar.R)
solar
median(solar$Solar.R)
solar<-mydata[!is.na(mydata) & $mydata$Ozone>31 & mydata$Temp > 90,]
solar<-mydata[!is.na(mydata) & mydata$Ozone>31 & mydata$Temp > 90,]
solar
View(solar)
View(solar)
solar<-mydata[!is.na(mydata) & mydata$Ozone>31 & mydata$Temp > 90,]
month <- mydata[mydata$Month == 6]
month <- mydata[mydata$Month == 6,]
median(month$Temp)
install.packages(swirl)
"swirl
install.packages("swirl")
data <- read.csv(H:\hw1_data.csv)
data <- read.csv(H:/hw1_data.csv)
data <- read.csv(//H:/hw1_data.csv)
data <- read.csv("H:/hw1_data.csv")
summary(data)
solozone <- data[!is.na(data§Temp) & !is.na(data$Ozone)]
solozone <- data(!is.na(data§Temp) & !is.na(data$Ozone)
solozone <- data(!is.na(data$Temp) & !is.na(data$Ozone)
solozone <- data[!is.na(data$Temp) & !is.na(data$Ozone,]
solozone <- !is.na(data$Temp) & !is.na(data$Ozone)
solozonefit <- data$Temp > 31 $ data$Ozone > 90
solozonefit <- data$Temp > 31 & data$Ozone > 90
solozonefit <- solozone$Temp > 31 & solozone$Ozone > 90
solozonefit <- solozone$Temp > 31 & solozone$Ozone > 90
median(data$Ozone[!is.na(data$Ozone)])
above <- data$Temp > 31 & data$Ozone > 90
median(data$Solar.R)
median(data$Solar.R[above])
above
above <- data$Solar.R[data$Temp > 31 & data$Ozone > 90]
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90])
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90] & !is.na(data$Temp) & !is.na(data$Ozone))
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90 & !is.na(data$Temp) & !is.na(data$Ozone)]
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90 & !is.na(data$Temp) & !is.na(data$Ozone)]
above <- data$Temp > 31 & data$Ozone > 90 & !is.na(data$Temp) & !is.na(data$Ozone)
median(data$Solar.R[above])
above
above <- !is.na(data$Temp) & !is.na(data$Ozone) & data$Temp > 31 & data$Ozone > 90)
above <- !is.na(data$Temp) & !is.na(data$Ozone) & data$Temp > 31 & data$Ozone > 90
median(data$Solar.R[above])
mean(data$Temp[data$Month == 6])
?max
max(data$Ozone[data$Month == 5])
max(data$Ozone[!is.na(data$Ozone) & data$Month == 5])
meadian(data$Solar.R[data$Temp > 31 & data$Ozone > 90])
median(data$Solar.R[data$Temp > 31 & data$Ozone > 90])
sol <- median(data$Solar.R[data$Temp > 31 & data$Ozone > 90])
sol
NA > §!
NA > 31
median(c(31,90,NA))
sol <- median(data$Solar.R[!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90])
sol
data$Solar.R[!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90]
data$Temp > 31 & data$Ozone >90
!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90
sol <- median(data$Solar.R[!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90])
class(sol)
View(data)
sol <- data.frame(data$Solar.R[!is.na(data$Temp) & data$Temp > 31 & !is.na(data$Ozone) & data$Ozone > 90])
View(sol)
median(sol)
median(sol$data.Solar.R..is.na.data.Temp....data.Temp...31....is.na.data.Ozone....)
sol <- data.frame(data$Solar.R[!is.na(data$Temp) & data$Temp > 90 & !is.na(data$Ozone) & data$Ozone > 30])
median(sol$data.Solar.R..is.na.data.Temp....data.Temp...90....is.na.data.Ozone....)
temp <- !is.na(data$Temp) & data$Temp>90
ozone <- !is.na(data$Ozone) & data$Ozone > 31
good <- temp & ozone
median(data$Solar.R[good])
good2 <- complete.cases(data)
median(data$Solar.R[good2])
install_from_swirl("R Programming")
library(swirl)
install_from_swirl("R Programming")
swirl()
T == F
TRUE == FALSE
TRUE == TRUE
FALSE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10<=10
5 == 7
5 != 7
!(5==7)
F & F
FALSE & FALSE
TRUE & c(TRUE; FALSE; FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical("twins", "twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
ncol(data)
?lm
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
library(httr)
oauth_endpoints("github")
?oauth_endpoints
oauth_endpoints("facebook")
?oauth2.0_token
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699)
library(httr)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
rm(github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
?sign_oauth1.0?
?sign_oauth1.0
?config
class(github_token)
github_token
myapp <- oauth_app("ZAvalanche",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
myapp <- oauth_app("ZAvalanche",
key = "64701587f015cc66be4c",
secret = "25653d9bf237091d51deee795fec681766b2c699")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httruv")
library(httruv)
rm(github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache=FALSE)
github_token
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache=FALSE)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
AmComSurvey <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
setwd("E:/R/Coursera/GCD/Week 2")
download.file(url, "AmComSurvey.csv")
AmComSurvey <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
setwd("E:/R/Coursera/GCD/Week 2")
download.file(AmComSurvey, "AmComSurvey.csv")
library(tidyverse)
m<- read_csv("AmComSurvey.csv")
View(m)
library(sqldf)
install.packages("sqldf")
install.packages("sqldf")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
?sqldf
library(sqldf)
sqldf(m, "select * from acs where AGEP < 50 and pwgtp1")
class(m)
m<- read.csv("AmComSurvey.csv")
class(m)
sqldf(m, "select * from acs where AGEP < 50 and pwgtp1")
install.packages("XML")
library(XML)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
htmlCode
close(con)
rm(con)
#
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
hrml <- htmlTreeParse(url, useInternalNodes = TRUE)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
hrml <- htmlTreeParse(url, useInternalNodes = TRUE)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
hrml <- htmlTreeParse(url, useInternalNodes = TRUE)
str(html)
str(hrml)
summary(hrml)
hrml[1]
hrml[[1]]
htmlNames(hrml)
names(hrml)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes = TRUE)
rm(hrml)
library(XML)
?htmlRoot
?htmlCode
xpathSApply(html, "//title", nchar())
xpathSApply(html, "//title", nchar)
html
structure <- rootNode(html)
structure <- xmlRoot(html)
structure
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes = TRUE)
xpathSApply(html, "//title", nchar)
html_node(html)
install.packages("rvest")
library(rvest)
html_node(html)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
help("Deprecated")
lego_movie %>%
html_node("strong span") %>%
html_text() %>%
as.numeric()
?html_node
html_text(html)
html
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
con
htmlCode
htmlCode[[2]]
htmlCode[[4]]
htmlCode[4]
htmlCode[254]
htmlCode[50]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
nchar(htmlCode[c(10,20,30,100)])
urlfwf <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(urlfwf, "fwf.for")
n <- read.fwf("fwf.for", 8)
View(n)
?read.fwf
n <- read.fwf("fwf.for", c(8,16,24,32)
n <- read.fwf("fwf.for", c(8,16,24,32))
View(n)
n <- read.fwf("fwf.for", c(10,16,22,32))
n <- read.fwf("fwf.for", c(10,14,22,32))
n <- read.fwf("fwf.for", c(10,12,22,32))
n <- read.fwf("fwf.for", c(10,11,22,32))
n <- read.fwf("fwf.for", c(10,10,22,32))
n <- read.fwf("fwf.for", c(10,9,22,32))
n <- read.fwf("fwf.for", c(10,9,-1,22,32))
n <- read.fwf("fwf.for", c(10,9,-1,22,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,-1,3,22,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,-1,3,3,-1,3,22,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,-1,3,-1,3,22,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,-1,3,3,22,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,-1,3,3,3,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,-1,3,9,3,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,-1,3,9,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,-1,3,9,-1,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,-1,3,8,-1,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,3,8,-1,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,3,3,8,-1,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,13,3,8,-1,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,3,8,-1,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,1,8,-1,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,4,8,-1,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,4,4,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,4,8,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,4,9,9,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,4,9,4,32), skip = 4)
n <- read.fwf("fwf.for", c(10,9,4,9,4,9,4,9), skip = 4)
View(n)
str(n)
n <- read.fwf("fwf.for", c(10,9,4,9,4,9,4,9,4), skip = 4)
View(n)
sum(n$V4)+sum(n$V9)
